apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "chart.name" . }}
    helm.sh/chart: {{ include "chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}        
    spec:
      volumes:
      - name: auth-secret
        secret:
          secretName: kafdrop-secret
      - name: nginx-configs
        configMap:
          name: kafdrop-nginx-configs
      initContainers:
      - name: init-sysctl
        image: busybox
        command:
          - sysctl
          - -w
          - net.core.somaxconn=1024
        securityContext:
          privileged: true
      containers:
        - name: kafdrop-nginx
          image: nginx
          ports:
          - name: nginx
            containerPort: 80
            protocol: TCP
          resources:
            requests:
              memory: 5Mi
              cpu: 10m
            limits:
              memory: 256Mi
              cpu: 1
          volumeMounts:
          - name: nginx-configs
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: nginx-configs
            mountPath: /usr/share/nginx/html/401.html
            subPath: 401.html
          - name: auth-secret
            mountPath: /etc/auth-secret
          lifecycle:
            postStart:
              exec:
                command: ['/bin/sh', '-c', 'printf "$(cat /etc/auth-secret/username):$(openssl passwd -apr1 $(cat /etc/auth-secret/password))\n" >> /etc/nginx/.htpasswd']
            preStop:
              exec:
                command: ['/bin/sh', '-c', 'sleep 90 && nginx -s quit']
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: KAFKA_BROKERCONNECT
            value: "{{ .Values.kafka.brokerConnect }}"
          - name: KAFKA_PROPERTIES
            value: "{{ .Values.kafka.properties }}"
          - name: KAFKA_TRUSTSTORE
            value: "{{ .Values.kafka.truststore }}"
          - name: KAFKA_KEYSTORE
            value: "{{ .Values.kafka.keystore }}"
          - name: JVM_OPTS
            value: "{{ .Values.jvm.opts }}"
          - name: JMX_PORT
            value: "{{ .Values.jmx.port }}"
          - name: HOST
            value: "{{ .Values.host }}"
          - name: SERVER_SERVLET_CONTEXTPATH
            value: "{{ .Values.server.servlet.contextPath | trimSuffix "/" }}"
          - name: KAFKA_PROPERTIES_FILE
            value: "{{ .Values.kafka.propertiesFile }}"
          - name: KAFKA_TRUSTSTORE_FILE
            value: "{{ .Values.kafka.truststoreFile }}"
          - name: KAFKA_KEYSTORE_FILE
            value: "{{ .Values.kafka.keystoreFile }}"
          - name: SERVER_PORT
            value: "{{ .Values.server.port }}"
          - name: CMD_ARGS
{{- if .Values.mountProtoDesc.enabled }}
            value: "--message.format=PROTOBUF --protobufdesc.directory=/protodesc/ {{ .Values.cmdArgs }}"
{{- else }}
            value: "{{ .Values.cmdArgs }}"
{{- end }}

          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "{{ .Values.server.servlet.contextPath | trimSuffix "/" }}/actuator/health"
              port: http
            initialDelaySeconds: 180
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: "{{ .Values.server.servlet.contextPath | trimSuffix "/" }}/actuator/health"
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if .Values.mountProtoDesc.enabled }}
          volumeMounts:
            - mountPath: /protodesc/
              name: proto-desc
      volumes:
        - name: proto-desc
          hostPath:
            path: {{ .Values.mountProtoDesc.hostPath }}
            type: Directory
{{- end }}


